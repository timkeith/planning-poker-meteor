template(name='play')
  h3 Session: #{name}
  if isDone
    div Planning session is complete
    +showTasks
    if isMod
      div#notdone
        a(href='#') Not Done
        | &nbsp;&ndash; mark the planning session as not complete
      div#delete
        a(href='#') Delete
        | &nbsp;&ndash; delete the planning session (can't be undone)
  else if iAmWaiting
    .indent
      a#join(href='#') Join
      | &ndash; join the planning session
  else if iAmJoining
    .indent
      | Waiting for approval...
      a#unjoin(href='#') Leave
  else if iAmPlaying
    +estimators
    if currTask
      +estimating(game=this task=currTask)
    else
      h3 Waiting
      .indent {{cond isMod 'Select a task to estimate' 'Waiting for a task to estimate'}}
    +showTasks
    div#done
      a(href='#') Done
      | &nbsp;&ndash; mark the planning session as complete
  else
    div Internal error; unknown state
    pre #{debugString}

  if debug
    h3 Debug
    pre #{debugString}


// List the estimators, context is game
template(name='estimators')
  .estimators
    h5 Estimators:
    each getPlaying
      div #{username} (#{email})
        if $eq id ../mod
          | - moderator
        else if $eq id userId
          with(player=this game=..)
            | - #[a#leave(href='#') Leave]
    if isMod
      each $mapped getJoining
        if $first
          h5 Waiting to join:
        with(player=this game=..)
          div #{player.username} (#{player.email})
            a#allow(href='#', title='Allow'):   span.glyphicon.glyphicon-ok
            a#reject(href='#', title='Reject'): span.glyphicon.glyphicon-remove

// Make estimates and show results
template(name='estimating')
  .estimating
    if game.isShowing
      h3 Reviewing
      div Estimation results
    else
      h3 Estimating
      div Select your estimate for this task
    h4 Task: #[.desc #{task.desc}]
    each choices
      with(game=../game task=../task choice=this)
        button.btn.choice(class=getClass, disabled=isDisabled) #{choice}
    h4 Votes:
    if game.isShowing
      +showVotes
    else
      +showVoted

// Display who has voted; mod and show votes
template(name='showVoted')
  .voted
    each players
      with(player=this task=../task)
        span(class=getClass) #{player.username}
  if game.isMod
    .mod
      if isEmpty task.votes
        a.disabled#show(href='#') Show
      else
        a#show(href='#') Show
      | &nbsp;&ndash; reveal all estimates for this task
      div To estimate a different task, select it from the list below

// Display everyone's votes; mod can save or re-vote
template(name='showVotes')
  table.votes
    each votes
      tr
        td {{cond vote vote '?'}}
        td #{player.username}
  if game.isMod
    .mod
      div
        a#save(href='#') Save
        if $eq task.proposed 0
          | &ndash; remove the recorded estimate
        else
          | &ndash; record the selected estimate of #[.est #{task.proposed}]
      div #[a#revote(href='#') Re-vote] &ndash; restart the voting

// Display all tasks; context is game
template(name='showTasks')
  h3 All Tasks
  .tasks
    .head
      .num
      .estimate Estimate
      span Task
    each asTask tasks
      +showTask(task=this game=..)

// Display one task: context has task and game
template(name='showTask')
  div(class=getClass)
    .num #{task.num}.
    .estimate #{estimate} &nbsp; &nbsp;
    if canSelectTask
      a.task(href='#') #{task.desc}
    else
      | #{task.desc}
